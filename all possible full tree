class Solution:
    def allPossibleFBT(self, N: int) -> List[TreeNode]:
        if (N - 1) % 2 != 0 :
            return []
        
        w = [[TreeNode(0)]]
        for n in range(3,N + 1,2):
            
            a = []
            for x in range(1,n-1, 2):
                l = w[(x-1)//2]
                r = w[(n-x-1)//2]
                for left_tree in l:
                    for right_tree in r:
                        root = TreeNode(0)
                        root.left = left_tree
                        root.right = right_tree
                        a.append(root)
            w.append(add)
        return w[-1]
                
            
        

